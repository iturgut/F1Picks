"""Initial database schema

Revision ID: fc1bcaffb6b3
Revises: 
Create Date: 2025-10-23 16:29:44.256531

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'fc1bcaffb6b3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('entity_type', sa.Enum('USER', 'LEAGUE', 'EVENT', 'PICK', 'RESULT', 'SCORE', name='entitytype'), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', 'SCORE_CALCULATED', 'SCORE_OVERRIDDEN', 'DATA_INGESTED', name='auditaction'), nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('performed_by', sa.UUID(), nullable=True),
    sa.Column('performed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit'))
    )
    op.create_index(op.f('ix_audit_action'), 'audit', ['action'], unique=False)
    op.create_index(op.f('ix_audit_entity_id'), 'audit', ['entity_id'], unique=False)
    op.create_index(op.f('ix_audit_entity_type'), 'audit', ['entity_type'], unique=False)
    op.create_index(op.f('ix_audit_performed_at'), 'audit', ['performed_at'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('circuit_id', sa.String(length=50), nullable=False),
    sa.Column('circuit_name', sa.String(length=100), nullable=False),
    sa.Column('session_type', sa.Enum('PRACTICE_1', 'PRACTICE_2', 'PRACTICE_3', 'SPRINT_QUALIFYING', 'SPRINT', 'QUALIFYING', 'RACE', name='eventtype'), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'LIVE', 'COMPLETED', 'CANCELLED', name='eventstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_events'))
    )
    op.create_index(op.f('ix_events_circuit_id'), 'events', ['circuit_id'], unique=False)
    op.create_index(op.f('ix_events_round_number'), 'events', ['round_number'], unique=False)
    op.create_index(op.f('ix_events_session_type'), 'events', ['session_type'], unique=False)
    op.create_index(op.f('ix_events_start_time'), 'events', ['start_time'], unique=False)
    op.create_index(op.f('ix_events_status'), 'events', ['status'], unique=False)
    op.create_index(op.f('ix_events_year'), 'events', ['year'], unique=False)
    op.create_table('leagues',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_global', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_leagues'))
    )
    op.create_index(op.f('ix_leagues_is_global'), 'leagues', ['is_global'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('photo_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('league_members',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('league_id', sa.UUID(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.id'], name=op.f('fk_league_members_league_id_leagues'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_league_members_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_league_members'))
    )
    op.create_table('picks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('prop_type', sa.Enum('RACE_WINNER', 'PODIUM_P1', 'PODIUM_P2', 'PODIUM_P3', 'FASTEST_LAP', 'POLE_POSITION', 'FIRST_RETIREMENT', 'SAFETY_CAR', 'LAP_TIME_PREDICTION', 'SECTOR_TIME_PREDICTION', 'PIT_WINDOW_START', 'PIT_WINDOW_END', 'TOTAL_PIT_STOPS', name='proptype'), nullable=False),
    sa.Column('prop_value', sa.Text(), nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_picks_event_id_events'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_picks_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_picks'))
    )
    op.create_index(op.f('ix_picks_prop_type'), 'picks', ['prop_type'], unique=False)
    op.create_table('results',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('prop_type', sa.Enum('RACE_WINNER', 'PODIUM_P1', 'PODIUM_P2', 'PODIUM_P3', 'FASTEST_LAP', 'POLE_POSITION', 'FIRST_RETIREMENT', 'SAFETY_CAR', 'LAP_TIME_PREDICTION', 'SECTOR_TIME_PREDICTION', 'PIT_WINDOW_START', 'PIT_WINDOW_END', 'TOTAL_PIT_STOPS', name='proptype'), nullable=False),
    sa.Column('actual_value', sa.Text(), nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('source', sa.Enum('FASTF1', 'MANUAL', 'FIA_TIMING', name='resultsource'), nullable=False),
    sa.Column('source_reference', sa.String(length=200), nullable=True),
    sa.Column('ingested_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_results_event_id_events'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_results'))
    )
    op.create_index(op.f('ix_results_prop_type'), 'results', ['prop_type'], unique=False)
    op.create_table('scores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('pick_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('margin', sa.Float(), nullable=True),
    sa.Column('exact_match', sa.Boolean(), nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['pick_id'], ['picks.id'], name=op.f('fk_scores_pick_id_picks'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_scores_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_scores')),
    sa.UniqueConstraint('pick_id', name=op.f('uq_scores_pick_id'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scores')
    op.drop_index(op.f('ix_results_prop_type'), table_name='results')
    op.drop_table('results')
    op.drop_index(op.f('ix_picks_prop_type'), table_name='picks')
    op.drop_table('picks')
    op.drop_table('league_members')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_leagues_is_global'), table_name='leagues')
    op.drop_table('leagues')
    op.drop_index(op.f('ix_events_year'), table_name='events')
    op.drop_index(op.f('ix_events_status'), table_name='events')
    op.drop_index(op.f('ix_events_start_time'), table_name='events')
    op.drop_index(op.f('ix_events_session_type'), table_name='events')
    op.drop_index(op.f('ix_events_round_number'), table_name='events')
    op.drop_index(op.f('ix_events_circuit_id'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_audit_performed_at'), table_name='audit')
    op.drop_index(op.f('ix_audit_entity_type'), table_name='audit')
    op.drop_index(op.f('ix_audit_entity_id'), table_name='audit')
    op.drop_index(op.f('ix_audit_action'), table_name='audit')
    op.drop_table('audit')
    # ### end Alembic commands ###
