name: Release Please

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      frontend_release_created: ${{ steps.release.outputs['frontend--release_created'] }}
      backend_release_created: ${{ steps.release.outputs['backend--release_created'] }}
      shared_release_created: ${{ steps.release.outputs['shared--release_created'] }}
    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@e4dc86ba9405554aeba3c6bb2d169500e7d3b4ee # v4
        with:
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
          token: ${{ secrets.GITHUB_TOKEN }}

  # Deploy frontend if frontend was released
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.frontend_release_created }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../shared && npm ci && npm run build

      - name: Build frontend
        run: cd frontend && npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@16e87c0a08142b0d0d33b76aeaf20823c381b9b9 # v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  # Deploy backend if backend was released
  deploy-backend:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.backend_release_created }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        working-directory: ./backend
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  # Publish shared package to npm if shared was released
  publish-shared:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.shared_release_created }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: cd shared && npm ci

      - name: Build package
        run: cd shared && npm run build

      - name: Publish to npm
        run: cd shared && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Create GitHub release with assets
  create-release-assets:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c # v4
        with:
          python-version: '3.9'

      - name: Build all components
        run: |
          # Install dependencies
          npm ci
          cd frontend && npm ci && cd ..
          cd shared && npm ci && npm run build && cd ..
          cd backend && pip install -r requirements.txt && cd ..
          
          # Build frontend
          cd frontend && npm run build && cd ..
          
          # Create distribution archives
          mkdir -p dist
          tar -czf dist/frontend-${{ needs.release-please.outputs.version }}.tar.gz -C frontend .next package.json
          tar -czf dist/backend-${{ needs.release-please.outputs.version }}.tar.gz -C backend app requirements.txt Dockerfile fly.toml
          tar -czf dist/shared-${{ needs.release-please.outputs.version }}.tar.gz -C shared dist package.json

      - name: Upload release assets
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
        with:
          tag_name: ${{ needs.release-please.outputs.tag_name }}
          files: |
            dist/frontend-${{ needs.release-please.outputs.version }}.tar.gz
            dist/backend-${{ needs.release-please.outputs.version }}.tar.gz
            dist/shared-${{ needs.release-please.outputs.version }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
